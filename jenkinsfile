pipeline {
	agent any
	    //def rtMaven = Artifactory.newMavenBuild()
//定义mvn环境
    

	stages {
		stage('Prepare') {
			echo "Prepare Stage"
			checkout scm
			pom = readMavenPom file: 'location/pom.xml'
			docker_host = "docker.ryan-miao.com"
			img_name = "${pom.groupId}-${pom.artifactId}"
			docker_img_name = "${docker_host}/${img_name}"
			echo "group: ${pom.groupId}, artifactId: ${pom.artifactId}, version: ${pom.version}"
			echo "docker-img-name: ${docker_img_name}"
			script {
				build_tag = sh(returnStdout: true, script: 'git rev-parse --short HEAD').trim()
				if (env.BRANCH_NAME != 'master' && env.BRANCH_NAME != null) {
					build_tag = "${env.BRANCH_NAME}-${build_tag}"
				}
				echo "build tag：${build_tag}"
			}
		}
	    stage('Test') {
			steps {
			
				echo 'Testing...'
			}
		}
		stage('Package'){
			steps {
				echo 'Packaging...'
				sh "/var/jenkins_home/apache-maven-3.6.0/bin/mvn clean package -DskipTests"
			}
		}
		stage('Docker') {
			steps {
				echo 'Testing...'
				sh "docker build -t springboot-demo ./"
			}
		}
		stage('Deploy') {
			steps {
				echo 'Deploying...'
			}
		}
	
	}
}